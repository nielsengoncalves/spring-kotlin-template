/*
 * This file is generated by jOOQ.
 */
package com.example.template.db.tables.records


import com.example.template.db.tables.Users

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS), Record9<UUID?, String?, String?, String?, String?, String?, Boolean?, LocalDateTime?, LocalDateTime?> {

    var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    var githubUsername: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var name: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var company: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    var location: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    var bio: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    @set:JvmName("setIsAvailableForHiring")
    var isAvailableForHiring: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    var createdAt: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    var updatedAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<UUID?, String?, String?, String?, String?, String?, Boolean?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row9<UUID?, String?, String?, String?, String?, String?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row9<UUID?, String?, String?, String?, String?, String?, Boolean?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row9<UUID?, String?, String?, String?, String?, String?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<UUID?> = Users.USERS.ID
    override fun field2(): Field<String?> = Users.USERS.GITHUB_USERNAME
    override fun field3(): Field<String?> = Users.USERS.NAME
    override fun field4(): Field<String?> = Users.USERS.COMPANY
    override fun field5(): Field<String?> = Users.USERS.LOCATION
    override fun field6(): Field<String?> = Users.USERS.BIO
    override fun field7(): Field<Boolean?> = Users.USERS.IS_AVAILABLE_FOR_HIRING
    override fun field8(): Field<LocalDateTime?> = Users.USERS.CREATED_AT
    override fun field9(): Field<LocalDateTime?> = Users.USERS.UPDATED_AT
    override fun component1(): UUID? = id
    override fun component2(): String? = githubUsername
    override fun component3(): String? = name
    override fun component4(): String? = company
    override fun component5(): String? = location
    override fun component6(): String? = bio
    override fun component7(): Boolean? = isAvailableForHiring
    override fun component8(): LocalDateTime? = createdAt
    override fun component9(): LocalDateTime? = updatedAt
    override fun value1(): UUID? = id
    override fun value2(): String? = githubUsername
    override fun value3(): String? = name
    override fun value4(): String? = company
    override fun value5(): String? = location
    override fun value6(): String? = bio
    override fun value7(): Boolean? = isAvailableForHiring
    override fun value8(): LocalDateTime? = createdAt
    override fun value9(): LocalDateTime? = updatedAt

    override fun value1(value: UUID?): UsersRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UsersRecord {
        this.githubUsername = value
        return this
    }

    override fun value3(value: String?): UsersRecord {
        this.name = value
        return this
    }

    override fun value4(value: String?): UsersRecord {
        this.company = value
        return this
    }

    override fun value5(value: String?): UsersRecord {
        this.location = value
        return this
    }

    override fun value6(value: String?): UsersRecord {
        this.bio = value
        return this
    }

    override fun value7(value: Boolean?): UsersRecord {
        this.isAvailableForHiring = value
        return this
    }

    override fun value8(value: LocalDateTime?): UsersRecord {
        this.createdAt = value
        return this
    }

    override fun value9(value: LocalDateTime?): UsersRecord {
        this.updatedAt = value
        return this
    }

    override fun values(value1: UUID?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: Boolean?, value8: LocalDateTime?, value9: LocalDateTime?): UsersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: UUID? = null, githubUsername: String? = null, name: String? = null, company: String? = null, location: String? = null, bio: String? = null, isAvailableForHiring: Boolean? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.githubUsername = githubUsername
        this.name = name
        this.company = company
        this.location = location
        this.bio = bio
        this.isAvailableForHiring = isAvailableForHiring
        this.createdAt = createdAt
        this.updatedAt = updatedAt
    }
}
